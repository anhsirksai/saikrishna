Part -I
create dicts:
User,
-- read command line arguments into a list(for user). then enter the user details into the dict() declared.
-- User is a dictionary of tuples(name,place,dob). dictionary size unlimited.
-- dict is global.

 Acquaintance,
 -- read command line arguments into a list(for user). then enter the user details into the dict() declared.
-- Acquaintance is a dictionary of lists. friends can be added or removed(Update Aquaintance is a procedure that does that)
-- dict is global.

optional : add validations to the list taken as input.(command line arguments should be 3)
--add exception handling. 

Procedures:
1. Add friend, Add friends, Update Acquaintances -- Update dictionaries with user input, return true on success.
2. Remove user: not removed from acquaintances. -- true on success. false on invalid id.
3.get_friends(user_id) return friends of a user. can be done by retriving from aquaintance dict.
4. get_friends_of_friends() : check statment for constraints.
Do this and try to get more clarity on messages part.

Part II: All on messages.
Message,
Message is a tuple with the specified fields.
